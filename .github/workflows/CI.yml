name: CI

on:
  push:
    branches:
      - main

jobs:
  validate_and_trigger:
    name: Validate Terraform and Trigger Jenkins Job
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"

      # Step 3: Initialize Terraform without backend
      - name: Terraform Init (Backend Disabled)
        run: terraform init -backend=false

      # Step 4: Format Terraform Configuration
      - name: Terraform Format
        run: |
          terraform fmt -check
          
      # Step 5: Validate Terraform Configuration
      - name: Terraform Validate
        run: terraform validate

      # Step 6: Load configuration from a config file
      - name: Load config
        id: load_config
        run: |
          echo "ENVIRONMENT=$(jq -r .environment config.json)" >> $GITHUB_ENV
          echo "TERRAFORM_ACTION=$(jq -r .terraform_action config.json)" >> $GITHUB_ENV
          echo "JENKINS_JOB=$(jq -r .jenkins_job config.json)" >> $GITHUB_ENV
          echo "JENKINS_URL=$(jq -r .jenkins_url config.json)" >> $GITHUB_ENV

      # Step 7: Check Jenkins Reachability
      - name: Check Jenkins Reachability
        run: |
          # Send request and capture the response body and status code
          response=$(curl -w "%{http_code}" -s -o response_body.txt -u "***:***" "https://0401-2402-a00-173-e1b-358c-ad6c-6393-5588.ngrok-free.app/job/IaC/api/json")

          # Extract the status code (last 3 characters of the response)
          status_code="${response: -3}"

          # Display the full response body in the logs
          echo "Response Body:"
          cat response_body.txt

          # Display the HTTP status code in the logs
          echo "HTTP Status Code: $status_code"

          # Check if the status code is 200 or not
          if [ "$status_code" -ne 200 ]; then
            echo "Jenkins is not reachable via ngrok. HTTP Status: $status_code"
            exit 1  # Exit with an error to fail the workflow
          else
            echo "Jenkins is reachable via ngrok."
          fi

      # Step 8: Trigger the Jenkins job with parameters
      - name: Trigger Jenkins Job
        run: |
          # Capture only the HTTP status code
          response=$(curl -w "%{http_code}" -s -o /dev/null -X POST "${{ env.JENKINS_URL }}/job/${{ env.JENKINS_JOB }}/buildWithParameters" \
          --user "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" \
          --data-urlencode "environment=${{ env.ENVIRONMENT }}" \
          --data-urlencode "Terraform_Action=${{ env.TERRAFORM_ACTION }}")
          
          if [ "$response" -ne 201 ]; then
            echo "Jenkins is not reachable via ngrok. HTTP Status: $response"
            exit 1  # Exit with an error to fail the workflow
          else
            echo "Jenkins job triggered successfully."
          fi
