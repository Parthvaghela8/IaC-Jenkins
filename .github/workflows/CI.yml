name: CI

on:
  push:
    branches:
      - main

jobs:
  validate_and_trigger:
    name: Validate Terraform and Trigger Jenkins Job
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"

      # Step 3: Initialize Terraform without backend
      - name: Terraform Init (Backend Disabled)
        run: terraform init -backend=false

      # Step 4: Format Terraform Configuration
      - name: Terraform Format
        run: |
          terraform fmt -check
          
      # Step 5: Validate Terraform Configuration
      - name: Terraform Validate
        run: terraform validate

      # Step 6: Check Jenkins Reachability
      - name: Check Jenkins Reachability
        run: |
          response=$(curl -I -s "${{ env.NGROK_URL }}/job/${{ env.JENKINS_JOB }}/api/json")
          
          if [[ "$response" != *"200 OK"* ]]; then
            echo "Jenkins is not reachable via ngrok."
            exit 1  # Exit with an error to fail the workflow
          else
            echo "Jenkins is reachable via ngrok."
          fi

      # Step 7: Trigger the Jenkins job with parameters
      - name: Trigger Jenkins Job
        run: |
          response=$(curl -X POST "${{ env.JENKINS_URL }}/job/${{ env.JENKINS_JOB }}/buildWithParameters" \
          --user "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" \
          --data-urlencode "environment=${{ env.ENVIRONMENT }}" \
          --data-urlencode "Terraform_Action=${{ env.TERRAFORM_ACTION }}")
          
          if [[ "$response" != *"201 Created"* ]]; then
            echo "Failed to trigger Jenkins job"
            exit 1  # Exit with an error to fail the workflow
          fi
